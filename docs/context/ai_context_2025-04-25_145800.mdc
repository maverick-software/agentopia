---
description:
globs:
alwaysApply: false
---
# AI Context Document - Fri 04/25/2025 14:58:00

This document summarizes the system state and context following the execution of the `new_chat_protocol` on Fri 04/25/2025.

## Investigation Date & Time
Fri 04/25/2025 ~14:58:00 (System time command failed, using approximation)

## Project Structure & Key Components

*   **Goal:** Agentopia - AI agent platform with Discord integration (web UI, agent config, team features).
*   **Tech Stack:** React/Vite/TS (Frontend), Supabase (DB, Auth, Edge Functions), Node.js/TS (Backend Services on DigitalOcean), Discord.js, PM2.
*   **Core Directories:** `src/` (Frontend), `supabase/functions/` (API Layer), `supabase/migrations/` (DB), `services/` (Backend Workers).
*   **Frontend Entry Point:** `src/main.tsx` -> `src/App.tsx` -> `src/router/AppRouter.tsx`.
*   **API Layer:** Supabase Edge Functions (`generate-embedding`, `chat`, `discord-interaction-handler`, `manage-discord-worker`, etc.) and React Hooks (`src/hooks/*`).
*   **Backend Services:** `services/worker-manager` manages `services/discord-worker` processes via PM2 on DigitalOcean droplet (`165.22.172.98`).

## Database Overview

*   **Agent Teams Feature Schema:** Tables `teams`, `team_members`, `chat_sessions`, `chat_messages` created, migrated, and RLS policies applied (verified via migration files `20250425*`).
*   **Embeddings:** Planned via OpenAI `text-embedding-3-small`, triggered by explicit API call from `useChatMessages` hook to `generate-embedding` function.
*   **RLS:** Enabled on key tables (`agents`, `agent_discord_connections`, etc.). README notes RLS was temporarily disabled for debugging and needs re-enabling in Supabase UI. The `update_worker_status` RPC function bypasses RLS for worker status updates.

## Current Feature Implementation Status (Agent Teams)

*   **WBS:** `docs/plans/agent_teams/wbs_checklist.md`
*   **Phase 1 (Setup):** Complete.
*   **Phase 2 (Database):** Complete.
*   **Phase 3 (API Layer):** In Progress.
    *   TypeScript Interfaces (`Team`, `TeamMember`): Done.
    *   `useTeams` hook: Done.
    *   `useTeamMembers` hook: File created, functions not implemented yet.
*   **Next WBS Step:** Implement functions within `useTeamMembers` hook or create `useChatSessions` hook file.

## Key Findings & Issues

1.  **Missing Logs (Rule #2 Violation):** Log directories (`docs/console/logs/`, `logs/`) exist but contain no log files, only a `README.md` in `logs/`. Logging needs implementation across services and functions.
2.  **Discord Interaction Error (Bug):** `docs/bugs/discord-interaction-handler.md` contains Supabase logs showing repeated errors: `Bad Request: Interaction secret missing or URL format incorrect.`. This aligns with `README.md` known issues and prevents Discord slash commands/interactions from working. Needs investigation (likely config/secret issue in Supabase function or Discord app settings).
3.  **Frontend Build Error (`AuthContext.tsx`):** `README.md` and previous context (`ai_context_2025-04-24_112625.mdc`) mention a duplicate `isAdmin` variable declaration in `src/contexts/AuthContext.tsx`. This likely prevents the frontend app from compiling/running. **This is probably the highest priority blocking issue.**
4.  **Large Files (Philosophy #1 Violation):** `README.md` and previous context identify `src/pages/AgentEditPage.tsx` (1326 lines) and `src/pages/DatastoresPage.tsx` (664 lines) as exceeding the 500-line limit. They require refactoring plans.
5.  **RLS Re-enabling:** `README.md` states RLS needs to be re-enabled in the Supabase dashboard for `agents` and `agent_discord_connections` tables.

## Areas Requiring Further Investigation

*   Root cause of the Discord interaction secret error.
*   Exact status of the `AuthContext.tsx` error (needs verification if still present).
*   Confirm RLS status in Supabase Dashboard.

## Application Entry Points

*   **Web UI:** `src/main.tsx` (via Vite dev server or build output)
*   **Supabase Functions:** Various HTTPS endpoints exposed by Supabase (e.g., for Discord interactions, worker management).
*   **Backend Service (`worker-manager`):** Listens on `http://165.22.172.98:8000` (as per `README.md`).

---
Generated by AI Assistant following `new_chat_protocol.mdc` at Fri 04/25/2025 ~14:58:00
